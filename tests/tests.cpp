#include "gtest-1.8.1/gtest.h"
#include "../src/headers/map.h"
#include <iostream>
using namespace std;
/**/

TEST(testMap, testCellType){
	std::array<std::string, MAP_HEIGHT> testMap = {
    "############################",
    "#............##............#",
    "#.####.#####.##.#####.####.#",
    "#o####.#####.##.#####.####o#",
    "#.####.#####.##.#####.####.#",
    "#..........................#",
    "#.####.##.########.##.####.#",
    "#.####.##.########.##.####.#",
    "#......##....##............#",
    "######.#####.##............#",
    "######.#####.##............#",
    "######.##..................#",
    "######.##..................#",
    "######.##..................#",
    "D..........................D",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#..........................#",
    "#......................... #",
    "############################"
};
	Map mapu(testMap);

	EXPECT_EQ(mapu.cellType(Coord(0,0)), Cell::WALL);
	EXPECT_EQ(mapu.cellType(Coord(1,1)), Cell::PILL);
	EXPECT_EQ(mapu.cellType(Coord(1,5)), Cell::PILL);
	EXPECT_EQ(mapu.cellType(Coord(3,1)), Cell::POWER_UP);
	EXPECT_EQ(mapu.cellType(Coord(14,0)), Cell::TUNNEL);
	EXPECT_EQ(mapu.cellType(Coord(29,26)), Cell::FLOOR);
	EXPECT_EQ(mapu.cellType(Coord(30,27)), Cell::WALL);

}
